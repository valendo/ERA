@inherits RazorFunction

@functions {
    public override string FunctionDescription
    {
        get  { return "Show news detail"; }
    }

    string PathInfoString(int segment)
    {
        string pathInfo = Composite.Core.Routing.Pages.C1PageRoute.GetPathInfo() ?? string.Empty;
        string[] segments = pathInfo.Split('/');
        return segments.Skip(segment + 1).FirstOrDefault();
    }

    public static string convertToUnSign(string s)
    {
        System.Text.RegularExpressions.Regex regex = new System.Text.RegularExpressions.Regex("\\p{IsCombiningDiacriticalMarks}+");
        string temp = s.Normalize(System.Text.NormalizationForm.FormD);
        return regex.Replace(temp, String.Empty).Replace('\u0111', 'd').Replace('\u0110', 'D');
    }

    public static string GetUrlFromTitle(string title)
    {
        const string autoRemoveChars = @",./\?#!""@+'`´*():;$%&=¦§";
        var generated = new System.Text.StringBuilder();

        foreach (var c in title.Where(c => autoRemoveChars.IndexOf(c) == -1))
        {
            generated.Append(c);
        }

        var url = generated.ToString().Replace(" ", "-");

        return convertToUnSign(url.ToLower());
    }
}

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
    </head>
    <body>
        @{
            Composite.Core.Routing.Pages.C1PageRoute.RegisterPathInfoUsage();
            string pubDate = PathInfoString(0);
            string Title = PathInfoString(1);
            DateTime PublishDate = new DateTime();
            My.Content.News detail = null;
            if (!string.IsNullOrEmpty(pubDate) && !string.IsNullOrEmpty(Title))
            {
                PublishDate = DateTime.Parse(PathInfoString(0));
                detail = Data.Get<My.Content.News>().Where(t => t.PublishDate == PublishDate && GetUrlFromTitle(t.Title) == Title).FirstOrDefault();       
            }
        }
        @if (detail != null)
        {
            <h2>@detail.Title</h2>
            <i>@detail.PublishDate.ToString("dd/MM/yyyy")</i>
            <br /><br />
            <div>@Html.Raw(detail.Content)</div>    
        }
    </body>
</html>